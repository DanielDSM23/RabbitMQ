services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"       # RabbitMQ broker
      - "15672:15672"     # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network


  producer:
    build:
      context: .
      dockerfile: src/producer/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    working_dir: /app
    command: >
      sh -c "
        node producer.js
      "
    networks:
      - app-network
    
  consumer:
    build:
      context: .
      dockerfile: src/consumer/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      producer:
        condition: service_started
    working_dir: /app
    command: >
      sh -c "
        node consumer.js
      "
    networks:
      - app-network
  
  consumer-add:
    build:
      context: .
      dockerfile: src/consumerAdd/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      producer:
        condition: service_started
    working_dir: /app
    command: >
      sh -c "
        node consumerAdd.js
      "
    networks:
      - app-network

  consumer-divide:
    build:
      context: .
      dockerfile: src/consumerDivide/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      producer:
        condition: service_started
    working_dir: /app
    command: >
      sh -c "
        node consumerDivide.js
      "
    networks:
      - app-network

  consumer-multiply:
    build:
      context: .
      dockerfile: src/consumerMultiply/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      producer:
        condition: service_started
    working_dir: /app
    command: >
      sh -c "
        node consumerMultiply.js
      "
    networks:
      - app-network
  
  consumer-substract:
    build:
      context: .
      dockerfile: src/consumerSubstract/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      producer:
        condition: service_started
    working_dir: /app
    command: >
      sh -c "
        node consumerSubstract.js
      "
    networks:
      - app-network

networks:
  app-network:
    driver: bridge